import Rect from 'zombiebox/zb/geometry/rect';
import { State } from 'zombiebox/zb/device/interfaces/i-video';
import LocalStorage from 'zombiebox/zb/device/common/local-storage';
import AbstractDevice from 'zombiebox/zb/device/abstract-device';
import Info from './info';
import Input from './input';
import StatefulVideo from './stateful-video';
import Video from './video';
import MSFServer from "./msf-server";

export default class Device extends AbstractDevice {
	info: Info;
	input: Input;
	storage: LocalStorage;
	protected _msfServer: MSFServer;
	protected _screensaverJob: Promise | null;
	protected _tizen: any;
	protected _webapis: any;
	EVENT_APP_CONTROL: string;
	constructor();
	init(): void;
	createVideo(rect: Rect): Video;
	createStatefulVideo(): StatefulVideo;
	getMAC(): string;
	getIP(): string;
	exit(): void;
	setOSDOpacity(value: number): void;
	getOSDOpacity(): number;
	setOSDChromaKey(chromaKey: string): void;
	getOSDChromaKey(): string | null;
	removeOSDChromaKey(): void;
	hasOSDOpacityFeature(): boolean;
	hasOSDAlphaBlendingFeature(): boolean;
	hasOSDChromaKeyFeature(): boolean;
	isUHDSupported(): boolean;
	isUHD8KSupported(): boolean;
	getEnvironment(): object;
	getLaunchParams(): object;
	hide(): void;
	proxyContext(context: any): void;
	enableScreensaver(turn: boolean): Promise<number>;
	startMultiscreenServer(channelName: string): Promise<MSFServer>;
	protected _onAppControl(): void;
	protected _updateScreensaverState(event: string, newState: State): void;
	static detect(): boolean;
}
